// Class definition

type [type-access-modifier] type-name [type-generic-params] [primary-constructor-access-modifier] ( parameter-list ) [ as self-identifier ] =
[ class ]
[ inherit base-type-name(base-constructor-args) ]
[ let-bindings ]
[ do-bindings ]
member-list
[ end ]

// both access modifiers above are public by default
// every non-static member must have a self-identifier
// no requirement to use a particular word for self-identifier (e.g., this, self, me)
// you can create objects by using a new expression, with or without the optional new keyword

type CustomerName(firstName: int, middleInitial: string) = 
    member x.FirstName = firstName
    member x.MiddleInitial = middleInitial

new CustomerName (1, "oi") |> (fun x -> printfn "%A %A" x.FirstName x.MiddleInitial)