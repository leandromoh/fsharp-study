Object expressions must give definitions for all unimplemented abstract members and canâ€™t add other
members.

{ new Type optional-arguments with
     member-definitions
  optional-extra-interface-definitions }

open System.Drawing

type IShape =
    abstract Contains : Point -> bool
    abstract BoundingBox : Rectangle


// center:Point * radius:int -> IShape

let circle(center : Point, radius : int) =
    {new IShape with
          member x.Contains(p : Point) =
              let dx = float32 (p.X - center.X)
              let dy = float32 (p.Y - center.Y)
              sqrt(dx * dx + dy * dy) <= float32 radius
          member x.BoundingBox =
              Rectangle(
                  center.X - radius, center.Y - radius,
                  2 * radius + 1, 2 * radius + 1)}